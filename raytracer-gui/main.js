/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/index.js":
/*!***********************!*\
  !*** ./dist/index.js ***!
  \***********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst canvas_1 = __webpack_require__(/*! raytracer/canvas */ \"../raytracer/dist/canvas.js\");\nconst color_1 = __webpack_require__(/*! raytracer/color */ \"../raytracer/dist/color.js\");\nconst intersection_1 = __webpack_require__(/*! raytracer/intersection */ \"../raytracer/dist/intersection.js\");\nconst material_1 = __webpack_require__(/*! raytracer/material */ \"../raytracer/dist/material.js\");\nconst pointLight_1 = __webpack_require__(/*! raytracer/pointLight */ \"../raytracer/dist/pointLight.js\");\nconst ray_1 = __webpack_require__(/*! raytracer/ray */ \"../raytracer/dist/ray.js\");\nconst sphere_1 = __webpack_require__(/*! raytracer/sphere */ \"../raytracer/dist/sphere.js\");\nconst tuple_1 = __webpack_require__(/*! raytracer/tuple */ \"../raytracer/dist/tuple.js\");\nfunction simpleRenderTest() {\n    var c = new canvas_1.Canvas(1024, 1024);\n    var rayOrigin = tuple_1.Tuple.point(0, 0, -5);\n    var wallz = 10;\n    var wallSize = 7;\n    var pixelSize = wallSize / c.height;\n    var half = wallSize / 2;\n    var shape = new sphere_1.Sphere(1);\n    shape.material = new material_1.Material();\n    shape.material.color = new color_1.Color(1, 0.2, 1);\n    var light = new pointLight_1.PointLight(tuple_1.Tuple.point(-10, 10, -10), color_1.Color.WHITE.clone());\n    var xs = new intersection_1.Intersections(10);\n    for (var y = 0; y < c.height; y++) {\n        var worldY = half - pixelSize * y;\n        for (var x = 0; x < c.width; x++) {\n            var worldX = -half + pixelSize * x;\n            var position = tuple_1.Tuple.point(worldX, worldY, wallz);\n            var r = new ray_1.Ray(rayOrigin, position.substract(rayOrigin).normalize());\n            shape.intersect(r, xs);\n            if (xs.length > 0) {\n                var hit = xs.hit();\n                var point = r.position(hit.t);\n                var normal = shape.normalAt(point);\n                var color = shape.material.lighting(light, point, r.direction.negate(), normal);\n                c.writePixel(x, y, color);\n            }\n            xs.clear();\n        }\n    }\n    return c;\n}\nvar canvas = simpleRenderTest();\nvar raytracerCanvas = document.getElementById(\"raytracerCanvas\");\nraytracerCanvas.width = canvas.width;\nraytracerCanvas.height = canvas.height;\nvar renderData = canvas.toUint8ClampedArray();\nvar imageData = new ImageData(renderData, canvas.width, canvas.height);\nvar ctx = raytracerCanvas.getContext(\"2d\");\nctx.putImageData(imageData, 0, 0);\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://raytracer-gui/./dist/index.js?");

/***/ }),

/***/ "../raytracer/dist/canvas.js":
/*!***********************************!*\
  !*** ../raytracer/dist/canvas.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Canvas = void 0;\nconst color_1 = __webpack_require__(/*! ./color */ \"../raytracer/dist/color.js\");\nclass Canvas {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.data = new Float64Array(width * height * 3);\n        for (var i = 0; i < this.data.length; i++) {\n            this.data[i] = 0;\n        }\n    }\n    readPixel(x, y) {\n        if (x < 0 || x >= this.width || y < 0 || y >= this.height)\n            throw new RangeError();\n        var pixelIndex = Math.floor(y) * this.width * 3 + Math.floor(x) * 3;\n        return new color_1.Color(this.data[pixelIndex], this.data[pixelIndex + 1], this.data[pixelIndex + 2]);\n    }\n    writePixel(x, y, c) {\n        if (x < 0 || x >= this.width || y < 0 || y >= this.height)\n            return;\n        var pixelIndex = Math.floor(y) * this.width * 3 + Math.floor(x) * 3;\n        this.data[pixelIndex] = c.red;\n        this.data[pixelIndex + 1] = c.green;\n        this.data[pixelIndex + 2] = c.blue;\n    }\n    toPpm() {\n        var ppm = \"P3\\n\";\n        ppm += this.width + \" \" + this.height + \"\\n\";\n        ppm += \"255\";\n        for (var i = 0; i < this.data.length; i += 3) {\n            ppm += (i % 15 == 0) ? \"\\n\" : \" \";\n            ppm += Math.max(Math.min(Math.round(this.data[i] * 255), 255), 0).toString()\n                + \" \" + Math.max(Math.min(Math.round(this.data[i + 1] * 255), 255), 0).toString()\n                + \" \" + Math.max(Math.min(Math.round(this.data[i + 2] * 255), 255), 0).toString();\n        }\n        ppm += \"\\n\";\n        return ppm;\n    }\n    toUint8ClampedArray() {\n        var arr = new Uint8ClampedArray(this.width * this.height * 4);\n        var arrIndex = 0;\n        for (var i = 0; i < this.data.length; i += 3) {\n            arr[arrIndex] = this.data[i] * 255;\n            arr[arrIndex + 1] = this.data[i + 1] * 255;\n            arr[arrIndex + 2] = this.data[i + 2] * 255;\n            arr[arrIndex + 3] = 255;\n            arrIndex += 4;\n        }\n        return arr;\n    }\n}\nexports.Canvas = Canvas;\n//# sourceMappingURL=canvas.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/canvas.js?");

/***/ }),

/***/ "../raytracer/dist/collection.js":
/*!***************************************!*\
  !*** ../raytracer/dist/collection.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ObjectPool = void 0;\n/**\n * Object pool that will minimize garbage collection usage\n */\nclass ObjectPool {\n    constructor(arrayLength = 0) {\n        this.items = new Array(arrayLength);\n        this.indexMap = new Map();\n        this._length = 0;\n        for (var i = 0; i < arrayLength; i++) {\n            var newItem = this.create();\n            this.indexMap.set(newItem, i);\n            this.items[i] = newItem;\n        }\n    }\n    indexOf(item) {\n        var i = this.indexMap.get(item);\n        return (i === undefined || i >= this._length) ? -1 : i;\n    }\n    remove(a) {\n        var index;\n        if (a instanceof Object) {\n            index = this.indexMap.get(a);\n            if (index === undefined)\n                return;\n        }\n        else {\n            index = Math.floor(a);\n        }\n        if (index < 0 || index >= this._length)\n            return;\n        this._length--;\n        var removeItem = this.items[index];\n        var lastItem = this.items[this._length];\n        this.items[index] = lastItem;\n        this.items[this._length] = removeItem;\n        this.indexMap.set(removeItem, this._length);\n        this.indexMap.set(lastItem, index);\n    }\n    clear() {\n        this._length = 0;\n    }\n    /**\n     * Returns an unused item or creates a new one, if no unused item available\n    */\n    add() {\n        if (this.items.length == this._length) {\n            var newItem = this.create();\n            this.indexMap.set(newItem, this._length);\n            this._length = this.items.push(newItem);\n            return newItem;\n        }\n        return this.items[this._length++];\n    }\n    get(index) {\n        if (index >= this._length)\n            return undefined;\n        return this.items[index];\n    }\n    get length() {\n        return this._length;\n    }\n}\nexports.ObjectPool = ObjectPool;\n//# sourceMappingURL=collection.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/collection.js?");

/***/ }),

/***/ "../raytracer/dist/color.js":
/*!**********************************!*\
  !*** ../raytracer/dist/color.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Color = void 0;\nclass Color {\n    constructor(red, green, blue) {\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n    }\n    add(color) {\n        return new Color(this.red + color.red, this.green + color.green, this.blue + color.blue);\n    }\n    multiply(scalar) {\n        return new Color(this.red * scalar, this.green * scalar, this.blue * scalar);\n    }\n    divide(scalar) {\n        return new Color(this.red / scalar, this.green / scalar, this.blue / scalar);\n    }\n    substract(color) {\n        return new Color(this.red - color.red, this.green - color.green, this.blue - color.blue);\n    }\n    hadamardProduct(color) {\n        return new Color(this.red * color.red, this.green * color.green, this.blue * color.blue);\n    }\n    equals(color) {\n        return Math.abs(this.red - color.red) < Color.EPSILON\n            && Math.abs(this.green - color.green) < Color.EPSILON\n            && Math.abs(this.blue - color.blue) < Color.EPSILON;\n    }\n    clone() {\n        return new Color(this.red, this.green, this.blue);\n    }\n}\nexports.Color = Color;\nColor.EPSILON = 0.00001;\nColor.BLACK = new Color(0, 0, 0);\nColor.WHITE = new Color(1, 1, 1);\n//# sourceMappingURL=color.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/color.js?");

/***/ }),

/***/ "../raytracer/dist/intersection.js":
/*!*****************************************!*\
  !*** ../raytracer/dist/intersection.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Intersections = exports.Intersection = void 0;\nconst collection_1 = __webpack_require__(/*! ./collection */ \"../raytracer/dist/collection.js\");\nconst sort_1 = __webpack_require__(/*! ./sort */ \"../raytracer/dist/sort.js\");\nclass Intersection {\n    constructor(t, object) {\n        this.t = t;\n        this.object = object;\n    }\n    equals(intersection) {\n        return this.t == intersection.t && this.object === intersection.object;\n    }\n}\nexports.Intersection = Intersection;\nclass Intersections extends collection_1.ObjectPool {\n    static sortIntersection(a, b) {\n        return a.t - b.t;\n    }\n    create() {\n        return new Intersection(0, null);\n    }\n    /**\n     * Get hit, regardless of sort\n    */\n    hit() {\n        var hit = null;\n        for (var i = 0; i < this._length; i++) {\n            var item = this.items[i];\n            if ((hit == null || item.t < hit.t) && item.t > 0)\n                hit = item;\n        }\n        return hit;\n    }\n    sort() {\n        sort_1.mergeSortInplace(this.items, Intersections.sortIntersection, 0, this._length);\n        for (var i = 0; i < this._length; i++) {\n            this.indexMap.set(this.items[i], i);\n        }\n    }\n    equals(intersections) {\n        if (this._length != intersections.length)\n            return false;\n        for (var i = 0; i < this._length; i++) {\n            if (!this.items[i].equals(intersections.items[i]))\n                return false;\n        }\n        return false;\n    }\n}\nexports.Intersections = Intersections;\n//# sourceMappingURL=intersection.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/intersection.js?");

/***/ }),

/***/ "../raytracer/dist/material.js":
/*!*************************************!*\
  !*** ../raytracer/dist/material.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Material = void 0;\nconst color_1 = __webpack_require__(/*! ./color */ \"../raytracer/dist/color.js\");\nclass Material {\n    constructor() {\n        this.color = color_1.Color.WHITE.clone();\n        this.ambient = 0.1;\n        this.diffuse = 0.9;\n        this.specular = 0.9;\n        this.shininess = 200;\n    }\n    lighting(light, point, eyev, normalv) {\n        var effectiveColor = this.color.hadamardProduct(light.intensity);\n        var lightv = light.positon.substract(point).normalize();\n        var ambient = effectiveColor.multiply(this.ambient);\n        var lightDotNormal = lightv.dot(normalv);\n        var diffuse;\n        var specular;\n        if (lightDotNormal < 0) {\n            diffuse = color_1.Color.BLACK;\n            specular = color_1.Color.BLACK;\n        }\n        else {\n            diffuse = effectiveColor.multiply(this.diffuse * lightDotNormal);\n            var reflectv = lightv.negate().reflect(normalv);\n            var reflectDotEye = reflectv.dot(eyev);\n            if (reflectDotEye <= 0) {\n                specular = color_1.Color.BLACK;\n            }\n            else {\n                var factor = Math.pow(reflectDotEye, this.shininess);\n                specular = light.intensity.multiply(this.specular * factor);\n            }\n        }\n        return ambient.add(diffuse).add(specular);\n    }\n}\nexports.Material = Material;\n//# sourceMappingURL=material.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/material.js?");

/***/ }),

/***/ "../raytracer/dist/matrix.js":
/*!***********************************!*\
  !*** ../raytracer/dist/matrix.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Matrix3x3 = exports.Matrix2x2 = exports.Matrix4x4 = exports.Matrix = void 0;\nconst tuple_1 = __webpack_require__(/*! ./tuple */ \"../raytracer/dist/tuple.js\");\nclass Matrix {\n    constructor(a, b) {\n        if (b === undefined) {\n            var matrix = a;\n            if (matrix.length == 0 || matrix[0].length == 0)\n                throw new Error();\n            this.width = matrix[0].length;\n            this.height = matrix.length;\n            var data = new Float64Array(this.width * this.height);\n            for (var y = 0; y < this.height; y++) {\n                var row = matrix[y];\n                for (var x = 0; x < this.width; x++) {\n                    var value = row[x];\n                    if (value !== undefined) {\n                        data[this.width * y + x] = value;\n                    }\n                }\n            }\n            this.data = data;\n        }\n        else {\n            this.width = a;\n            this.height = b;\n            this.data = new Float64Array(this.width * this.height);\n        }\n    }\n    cofactor(row, column) {\n        return ((row + column) % 2 * 2 - 1) * -this.minor(row, column);\n    }\n    minor(row, column) {\n        var m = this.submatrix(row, column);\n        return m.determinant();\n    }\n    isInvertible() {\n        return this.determinant() != 0;\n    }\n    determinant() {\n        if (this.width != this.height)\n            throw new Error();\n        if (this.width == 2)\n            return Matrix2x2.prototype.determinant.call(this);\n        var det = 0;\n        for (var x = 0; x < this.width; x++) {\n            det += this.data[x] * this.cofactor(0, x);\n        }\n        return det;\n    }\n    toString() {\n        var string = \"\";\n        for (var y = 0; y < this.height; y++) {\n            string += \"|\";\n            for (var x = 0; x < this.width; x++) {\n                string += this.data[this.width * y + x].toFixed(2) + \"\\t|\";\n            }\n            string += \"\\n\";\n        }\n        return string;\n    }\n    get(row, column) {\n        if (row >= this.height || column >= this.width || row < 0 || column < 0)\n            throw new RangeError();\n        return this.data[this.width * row + column];\n    }\n    set(row, column, value) {\n        if (row >= this.height || column >= this.width || row < 0 || column < 0)\n            throw new RangeError();\n        this.data[this.width * row + column] = value;\n    }\n    multiply(matrix) {\n        if (matrix.height != this.height)\n            throw new Error();\n        var m = new Matrix(matrix.width, matrix.height);\n        for (var y = 0; y < matrix.height; y++) {\n            for (var x = 0; x < matrix.width; x++) {\n                var sum = 0;\n                for (var r = 0; r < matrix.height; r++) {\n                    sum += matrix.data[this.width * r + x] * this.data[this.width * y + r];\n                }\n                m.data[this.width * y + x] = sum;\n            }\n        }\n        return m;\n    }\n    transpose() {\n        var matrix = new Matrix(this.height, this.width);\n        for (var y = 0; y < matrix.height; y++) {\n            for (var x = y; x < matrix.width; x++) {\n                var index = this.width * y + x;\n                var indexTransposed = this.width * x + y;\n                var swap = this.data[index];\n                matrix.data[index] = this.data[indexTransposed];\n                matrix.data[indexTransposed] = swap;\n            }\n        }\n        return matrix;\n    }\n    submatrix(row, column) {\n        var m = new Matrix(this.width - 1, this.height - 1);\n        var y2 = 0;\n        for (var y = 0; y < this.height; y++) {\n            if (y == row) {\n                continue;\n            }\n            var x2 = 0;\n            for (var x = 0; x < this.width; x++) {\n                if (x == column) {\n                    continue;\n                }\n                m.data[m.width * y2 + x2] = this.data[this.width * y + x];\n                x2++;\n            }\n            y2++;\n        }\n        return m;\n    }\n    equals(matrix) {\n        if (this.width != matrix.width || this.height != matrix.height)\n            return false;\n        for (var i = 0; i < this.data.length; i++) {\n            {\n                var diff = Math.abs(this.data[i] - matrix.data[i]);\n                if (diff >= Matrix.EPSILON)\n                    return false;\n            }\n        }\n        return true;\n    }\n}\nexports.Matrix = Matrix;\nMatrix.EPSILON = 0.00001;\nclass Matrix4x4 extends Matrix {\n    constructor(matrix) {\n        if (matrix !== undefined) {\n            if (matrix.length != 4 || matrix[0].length != 4 || matrix[1].length != 4 || matrix[2].length != 4 || matrix[3].length != 4) {\n                throw new Error();\n            }\n            super(matrix);\n        }\n        else {\n            super(4, 4);\n        }\n    }\n    static translation(x, y, z, target) {\n        target ??= new Matrix4x4();\n        target.data[0] = 1;\n        target.data[4] = 0;\n        target.data[8] = 0;\n        target.data[12] = 0;\n        target.data[1] = 0;\n        target.data[5] = 1;\n        target.data[9] = 0;\n        target.data[13] = 0;\n        target.data[2] = 0;\n        target.data[6] = 0;\n        target.data[10] = 1;\n        target.data[14] = 0;\n        target.data[3] = x;\n        target.data[7] = y;\n        target.data[11] = z;\n        target.data[15] = 1;\n        return target;\n    }\n    static rotationX(radians, target) {\n        target ??= new Matrix4x4();\n        var cos = Math.cos(radians);\n        var sin = Math.sin(radians);\n        target.data[0] = 1;\n        target.data[4] = 0;\n        target.data[8] = 0;\n        target.data[12] = 0;\n        target.data[1] = 0;\n        target.data[5] = cos;\n        target.data[9] = sin;\n        target.data[13] = 0;\n        target.data[2] = 0;\n        target.data[6] = -sin;\n        target.data[10] = cos;\n        target.data[14] = 0;\n        target.data[3] = 0;\n        target.data[7] = 0;\n        target.data[11] = 0;\n        target.data[15] = 1;\n        return target;\n    }\n    static rotationY(radians, target) {\n        target ??= new Matrix4x4();\n        var cos = Math.cos(radians);\n        var sin = Math.sin(radians);\n        target.data[0] = cos;\n        target.data[4] = 0;\n        target.data[8] = -sin;\n        target.data[12] = 0;\n        target.data[1] = 0;\n        target.data[5] = 1;\n        target.data[9] = 0;\n        target.data[13] = 0;\n        target.data[2] = sin;\n        target.data[6] = 0;\n        target.data[10] = cos;\n        target.data[14] = 0;\n        target.data[3] = 0;\n        target.data[7] = 0;\n        target.data[11] = 0;\n        target.data[15] = 1;\n        return target;\n    }\n    static rotationZ(radians, target) {\n        target ??= new Matrix4x4();\n        var cos = Math.cos(radians);\n        var sin = Math.sin(radians);\n        target.data[0] = cos;\n        target.data[4] = sin;\n        target.data[8] = 0;\n        target.data[12] = 0;\n        target.data[1] = -sin;\n        target.data[5] = cos;\n        target.data[9] = 0;\n        target.data[13] = 0;\n        target.data[2] = 0;\n        target.data[6] = 0;\n        target.data[10] = 1;\n        target.data[14] = 0;\n        target.data[3] = 0;\n        target.data[7] = 0;\n        target.data[11] = 0;\n        target.data[15] = 1;\n        return target;\n    }\n    static scaling(x, y, z, target) {\n        target ??= new Matrix4x4();\n        target.data[0] = x;\n        target.data[4] = 0;\n        target.data[8] = 0;\n        target.data[12] = 0;\n        target.data[1] = 0;\n        target.data[5] = y;\n        target.data[9] = 0;\n        target.data[13] = 0;\n        target.data[2] = 0;\n        target.data[6] = 0;\n        target.data[10] = z;\n        target.data[14] = 0;\n        target.data[3] = 0;\n        target.data[7] = 0;\n        target.data[11] = 0;\n        target.data[15] = 1;\n        return target;\n    }\n    static shearing(xy, xz, yx, yz, zx, zy, target) {\n        target ??= new Matrix4x4();\n        target.data[0] = 1;\n        target.data[4] = yx;\n        target.data[8] = zx;\n        target.data[12] = 0;\n        target.data[1] = xy;\n        target.data[5] = 1;\n        target.data[9] = zy;\n        target.data[13] = 0;\n        target.data[2] = xz;\n        target.data[6] = yz;\n        target.data[10] = 1;\n        target.data[14] = 0;\n        target.data[3] = 0;\n        target.data[7] = 0;\n        target.data[11] = 0;\n        target.data[15] = 1;\n        return target;\n    }\n    transpose(target) {\n        var swap;\n        target ??= new Matrix4x4();\n        target.data[0] = this.data[0];\n        swap = this.data[1];\n        target.data[1] = this.data[4];\n        target.data[4] = swap;\n        swap = this.data[2];\n        target.data[2] = this.data[8];\n        target.data[8] = swap;\n        swap = this.data[3];\n        target.data[3] = this.data[12];\n        target.data[12] = swap;\n        target.data[5] = this.data[5];\n        swap = this.data[6];\n        target.data[6] = this.data[9];\n        target.data[9] = swap;\n        swap = this.data[7];\n        target.data[7] = this.data[13];\n        target.data[13] = swap;\n        target.data[10] = this.data[10];\n        swap = this.data[11];\n        target.data[11] = this.data[14];\n        target.data[14] = swap;\n        target.data[15] = this.data[15];\n        return target;\n    }\n    inverse(target) {\n        target ??= new Matrix4x4();\n        var a00 = this.data[0];\n        var a01 = this.data[1];\n        var a02 = this.data[2];\n        var a03 = this.data[3];\n        var a10 = this.data[4];\n        var a11 = this.data[5];\n        var a12 = this.data[6];\n        var a13 = this.data[7];\n        var a20 = this.data[8];\n        var a21 = this.data[9];\n        var a22 = this.data[10];\n        var a23 = this.data[11];\n        var a30 = this.data[12];\n        var a31 = this.data[13];\n        var a32 = this.data[14];\n        var a33 = this.data[15];\n        var determinant = (a00 * (a11 * (a22 * a33 - a23 * a32) + a12 * -(a21 * a33 - a23 * a31) + a13 * (a21 * a32 - a22 * a31)) +\n            a01 * -(a10 * (a22 * a33 - a23 * a32) + a12 * -(a20 * a33 - a23 * a30) + a13 * (a20 * a32 - a22 * a30)) +\n            a02 * (a10 * (a21 * a33 - a23 * a31) + a11 * -(a20 * a33 - a23 * a30) + a13 * (a20 * a31 - a21 * a30)) +\n            a03 * -(a10 * (a21 * a32 - a22 * a31) + a11 * -(a20 * a32 - a22 * a30) + a12 * (a20 * a31 - a21 * a30)));\n        if (determinant == 0)\n            return null;\n        target.data[0] = (a11 * (a22 * a33 - a23 * a32) + a12 * -(a21 * a33 - a23 * a31) + a13 * (a21 * a32 - a22 * a31)) / determinant;\n        target.data[1] = -(a01 * (a22 * a33 - a23 * a32) + a02 * -(a21 * a33 - a23 * a31) + a03 * (a21 * a32 - a22 * a31)) / determinant;\n        target.data[2] = (a01 * (a12 * a33 - a13 * a32) + a02 * -(a11 * a33 - a13 * a31) + a03 * (a11 * a32 - a12 * a31)) / determinant;\n        target.data[3] = -(a01 * (a12 * a23 - a13 * a22) + a02 * -(a11 * a23 - a13 * a21) + a03 * (a11 * a22 - a12 * a21)) / determinant;\n        target.data[4] = -(a10 * (a22 * a33 - a23 * a32) + a12 * -(a20 * a33 - a23 * a30) + a13 * (a20 * a32 - a22 * a30)) / determinant;\n        target.data[5] = (a00 * (a22 * a33 - a23 * a32) + a02 * -(a20 * a33 - a23 * a30) + a03 * (a20 * a32 - a22 * a30)) / determinant;\n        target.data[6] = -(a00 * (a12 * a33 - a13 * a32) + a02 * -(a10 * a33 - a13 * a30) + a03 * (a10 * a32 - a12 * a30)) / determinant;\n        target.data[7] = (a00 * (a12 * a23 - a13 * a22) + a02 * -(a10 * a23 - a13 * a20) + a03 * (a10 * a22 - a12 * a20)) / determinant;\n        target.data[8] = (a10 * (a21 * a33 - a23 * a31) + a11 * -(a20 * a33 - a23 * a30) + a13 * (a20 * a31 - a21 * a30)) / determinant;\n        target.data[9] = -(a00 * (a21 * a33 - a23 * a31) + a01 * -(a20 * a33 - a23 * a30) + a03 * (a20 * a31 - a21 * a30)) / determinant;\n        target.data[10] = (a00 * (a11 * a33 - a13 * a31) + a01 * -(a10 * a33 - a13 * a30) + a03 * (a10 * a31 - a11 * a30)) / determinant;\n        target.data[11] = -(a00 * (a11 * a23 - a13 * a21) + a01 * -(a10 * a23 - a13 * a20) + a03 * (a10 * a21 - a11 * a20)) / determinant;\n        target.data[12] = -(a10 * (a21 * a32 - a22 * a31) + a11 * -(a20 * a32 - a22 * a30) + a12 * (a20 * a31 - a21 * a30)) / determinant;\n        target.data[13] = (a00 * (a21 * a32 - a22 * a31) + a01 * -(a20 * a32 - a22 * a30) + a02 * (a20 * a31 - a21 * a30)) / determinant;\n        target.data[14] = -(a00 * (a11 * a32 - a12 * a31) + a01 * -(a10 * a32 - a12 * a30) + a02 * (a10 * a31 - a11 * a30)) / determinant;\n        target.data[15] = (a00 * (a11 * a22 - a12 * a21) + a01 * -(a10 * a22 - a12 * a20) + a02 * (a10 * a21 - a11 * a20)) / determinant;\n        return target;\n    }\n    determinant() {\n        var a00 = this.data[0];\n        var a01 = this.data[1];\n        var a02 = this.data[2];\n        var a03 = this.data[3];\n        var a10 = this.data[4];\n        var a11 = this.data[5];\n        var a12 = this.data[6];\n        var a13 = this.data[7];\n        var a20 = this.data[8];\n        var a21 = this.data[9];\n        var a22 = this.data[10];\n        var a23 = this.data[11];\n        var a30 = this.data[12];\n        var a31 = this.data[13];\n        var a32 = this.data[14];\n        var a33 = this.data[15];\n        return (a00 * (a11 * (a22 * a33 - a23 * a32) + a12 * -(a21 * a33 - a23 * a31) + a13 * (a21 * a32 - a22 * a31)) +\n            a01 * -(a10 * (a22 * a33 - a23 * a32) + a12 * -(a20 * a33 - a23 * a30) + a13 * (a20 * a32 - a22 * a30)) +\n            a02 * (a10 * (a21 * a33 - a23 * a31) + a11 * -(a20 * a33 - a23 * a30) + a13 * (a20 * a31 - a21 * a30)) +\n            a03 * -(a10 * (a21 * a32 - a22 * a31) + a11 * -(a20 * a32 - a22 * a30) + a12 * (a20 * a31 - a21 * a30)));\n    }\n    assign(matrix) {\n        this.data[0] = matrix.data[0];\n        this.data[1] = matrix.data[1];\n        this.data[2] = matrix.data[2];\n        this.data[3] = matrix.data[3];\n        this.data[4] = matrix.data[4];\n        this.data[5] = matrix.data[5];\n        this.data[6] = matrix.data[6];\n        this.data[7] = matrix.data[7];\n        this.data[8] = matrix.data[8];\n        this.data[9] = matrix.data[9];\n        this.data[10] = matrix.data[10];\n        this.data[11] = matrix.data[11];\n        this.data[12] = matrix.data[12];\n        this.data[13] = matrix.data[13];\n        this.data[14] = matrix.data[14];\n        this.data[15] = matrix.data[15];\n    }\n    clone() {\n        var m = new Matrix4x4();\n        m.data[0] = this.data[0];\n        m.data[1] = this.data[1];\n        m.data[2] = this.data[2];\n        m.data[3] = this.data[3];\n        m.data[4] = this.data[4];\n        m.data[5] = this.data[5];\n        m.data[6] = this.data[6];\n        m.data[7] = this.data[7];\n        m.data[8] = this.data[8];\n        m.data[9] = this.data[9];\n        m.data[10] = this.data[10];\n        m.data[11] = this.data[11];\n        m.data[12] = this.data[12];\n        m.data[13] = this.data[13];\n        m.data[14] = this.data[14];\n        m.data[15] = this.data[15];\n        return m;\n    }\n    multiply(a, b) {\n        if (a instanceof Matrix4x4) {\n            var target = b ?? new Matrix4x4();\n            if (matrix === this)\n                throw new Error();\n            var matrix = a;\n            var a00 = this.data[0];\n            var a01 = this.data[1];\n            var a02 = this.data[2];\n            var a03 = this.data[3];\n            var a10 = this.data[4];\n            var a11 = this.data[5];\n            var a12 = this.data[6];\n            var a13 = this.data[7];\n            var a20 = this.data[8];\n            var a21 = this.data[9];\n            var a22 = this.data[10];\n            var a23 = this.data[11];\n            var a30 = this.data[12];\n            var a31 = this.data[13];\n            var a32 = this.data[14];\n            var a33 = this.data[15];\n            target.data[0] = matrix.data[0] * a00 + matrix.data[4] * a01 + matrix.data[8] * a02 + matrix.data[12] * a03;\n            target.data[1] = matrix.data[1] * a00 + matrix.data[5] * a01 + matrix.data[9] * a02 + matrix.data[13] * a03;\n            target.data[2] = matrix.data[2] * a00 + matrix.data[6] * a01 + matrix.data[10] * a02 + matrix.data[14] * a03;\n            target.data[3] = matrix.data[3] * a00 + matrix.data[7] * a01 + matrix.data[11] * a02 + matrix.data[15] * a03;\n            target.data[4] = matrix.data[0] * a10 + matrix.data[4] * a11 + matrix.data[8] * a12 + matrix.data[12] * a13;\n            target.data[5] = matrix.data[1] * a10 + matrix.data[5] * a11 + matrix.data[9] * a12 + matrix.data[13] * a13;\n            target.data[6] = matrix.data[2] * a10 + matrix.data[6] * a11 + matrix.data[10] * a12 + matrix.data[14] * a13;\n            target.data[7] = matrix.data[3] * a10 + matrix.data[7] * a11 + matrix.data[11] * a12 + matrix.data[15] * a13;\n            target.data[8] = matrix.data[0] * a20 + matrix.data[4] * a21 + matrix.data[8] * a22 + matrix.data[12] * a23;\n            target.data[9] = matrix.data[1] * a20 + matrix.data[5] * a21 + matrix.data[9] * a22 + matrix.data[13] * a23;\n            target.data[10] = matrix.data[2] * a20 + matrix.data[6] * a21 + matrix.data[10] * a22 + matrix.data[14] * a23;\n            target.data[11] = matrix.data[3] * a20 + matrix.data[7] * a21 + matrix.data[11] * a22 + matrix.data[15] * a23;\n            target.data[12] = matrix.data[0] * a30 + matrix.data[4] * a31 + matrix.data[8] * a32 + matrix.data[12] * a33;\n            target.data[13] = matrix.data[1] * a30 + matrix.data[5] * a31 + matrix.data[9] * a32 + matrix.data[13] * a33;\n            target.data[14] = matrix.data[2] * a30 + matrix.data[6] * a31 + matrix.data[10] * a32 + matrix.data[14] * a33;\n            target.data[15] = matrix.data[3] * a30 + matrix.data[7] * a31 + matrix.data[11] * a32 + matrix.data[15] * a33;\n            return target;\n        }\n        else if (a instanceof tuple_1.Tuple) {\n            var t = a;\n            return new tuple_1.Tuple(this.data[0] * t.x + this.data[1] * t.y + this.data[2] * t.z + this.data[3] * t.w, this.data[4] * t.x + this.data[5] * t.y + this.data[6] * t.z + this.data[7] * t.w, this.data[8] * t.x + this.data[9] * t.y + this.data[10] * t.z + this.data[11] * t.w, this.data[12] * t.x + this.data[13] * t.y + this.data[14] * t.z + this.data[15] * t.w);\n        }\n        else {\n            //a instanceof Matrix (not supported)\n            throw new Error();\n        }\n    }\n}\nexports.Matrix4x4 = Matrix4x4;\nMatrix4x4.IDENTITY_MATRIX = new Matrix4x4([\n    [1, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1]\n]);\nclass Matrix2x2 extends Matrix {\n    constructor(matrix) {\n        if (matrix !== undefined) {\n            if (matrix.length != 2 || matrix[0].length != 2 || matrix[1].length != 2) {\n                throw new Error();\n            }\n            super(matrix);\n        }\n        else {\n            super(2, 2);\n        }\n    }\n    determinant() {\n        return this.data[0] * this.data[3] - this.data[1] * this.data[2];\n    }\n}\nexports.Matrix2x2 = Matrix2x2;\nclass Matrix3x3 extends Matrix {\n    constructor(matrix) {\n        if (matrix !== undefined) {\n            if (matrix.length != 3 || matrix[0].length != 3 || matrix[1].length != 3 || matrix[2].length != 3) {\n                throw new Error();\n            }\n            super(matrix);\n        }\n        else {\n            super(3, 3);\n        }\n    }\n    determinant() {\n        var a10 = this.data[3];\n        var a11 = this.data[4];\n        var a12 = this.data[5];\n        var a20 = this.data[6];\n        var a21 = this.data[7];\n        var a22 = this.data[8];\n        return (this.data[0] * (a11 * a22 - a12 * a21) + this.data[1] * -(a10 * a22 - a12 * a20) + this.data[2] * (a10 * a21 - a11 * a20));\n    }\n}\nexports.Matrix3x3 = Matrix3x3;\n//# sourceMappingURL=matrix.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/matrix.js?");

/***/ }),

/***/ "../raytracer/dist/pointLight.js":
/*!***************************************!*\
  !*** ../raytracer/dist/pointLight.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PointLight = void 0;\nconst tuple_1 = __webpack_require__(/*! ./tuple */ \"../raytracer/dist/tuple.js\");\nconst color_1 = __webpack_require__(/*! ./color */ \"../raytracer/dist/color.js\");\nclass PointLight {\n    constructor(position, intensity) {\n        this.positon = position ?? tuple_1.Tuple.point(0, 0, 0);\n        this.intensity = intensity ?? new color_1.Color(1, 1, 1);\n    }\n}\nexports.PointLight = PointLight;\n//# sourceMappingURL=pointLight.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/pointLight.js?");

/***/ }),

/***/ "../raytracer/dist/ray.js":
/*!********************************!*\
  !*** ../raytracer/dist/ray.js ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Ray = void 0;\nclass Ray {\n    constructor(origin, direction) {\n        this.origin = origin;\n        this.direction = direction;\n    }\n    position(t) {\n        return this.origin.add(this.direction.multiply(t));\n    }\n    transform(matrix) {\n        var direction = matrix.multiply(this.direction);\n        var origin = matrix.multiply(this.origin);\n        var ray = new Ray(origin, direction);\n        return ray;\n    }\n}\nexports.Ray = Ray;\n//# sourceMappingURL=ray.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/ray.js?");

/***/ }),

/***/ "../raytracer/dist/sort.js":
/*!*********************************!*\
  !*** ../raytracer/dist/sort.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeSortInplace = void 0;\n/**\n * Merges 2 sorted regions in an array into 1 sorted region (in-place without extra memory, stable)\n * @param items array to merge\n * @param left left array boundary inclusive\n * @param middle boundary between regions (left region exclusive, right region inclusive)\n * @param right right array boundary exclusive\n */\nfunction mergeInplace(items, compareFn, left, middle, right) {\n    if (right == middle)\n        return;\n    for (var i = left; i < middle; i++) {\n        var minRight = items[middle];\n        if (minRight < items[i]) {\n            var tmp = items[i];\n            items[i] = minRight;\n            var nextItem;\n            var next = middle + 1;\n            while (next < right && compareFn((nextItem = items[next]), tmp) < 0) {\n                items[next - 1] = nextItem;\n                next++;\n            }\n            items[next - 1] = tmp;\n        }\n    }\n}\n/**\n * In-place bottom up merge sort\n */\nfunction mergeSortInplace(items, compareFn, from, to) {\n    from ??= 0;\n    to ??= items.length;\n    var maxStep = (to - from) * 2;\n    for (var step = 2; step < maxStep; step *= 2) {\n        var oldStep = step / 2;\n        for (var x = from; x < to; x += step) {\n            mergeInplace(items, compareFn, x, x + oldStep, Math.min(x + step, to));\n        }\n    }\n}\nexports.mergeSortInplace = mergeSortInplace;\n//# sourceMappingURL=sort.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/sort.js?");

/***/ }),

/***/ "../raytracer/dist/sphere.js":
/*!***********************************!*\
  !*** ../raytracer/dist/sphere.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sphere = void 0;\nconst tuple_1 = __webpack_require__(/*! ./tuple */ \"../raytracer/dist/tuple.js\");\nconst intersection_1 = __webpack_require__(/*! ./intersection */ \"../raytracer/dist/intersection.js\");\nconst matrix_1 = __webpack_require__(/*! ./matrix */ \"../raytracer/dist/matrix.js\");\nconst material_1 = __webpack_require__(/*! ./material */ \"../raytracer/dist/material.js\");\nclass Sphere {\n    constructor(id, transform, material) {\n        this.id = id;\n        this.transform = transform ?? matrix_1.Matrix4x4.IDENTITY_MATRIX.clone();\n        this.material = material ?? new material_1.Material();\n    }\n    intersect(ray, intersections) {\n        ray = ray.transform(this.transform.inverse(Sphere.tempMatrix1));\n        intersections ??= new intersection_1.Intersections();\n        var sphere2ray = ray.origin.substract(tuple_1.Tuple.point(0, 0, 0));\n        var a = ray.direction.dot(ray.direction);\n        var b = 2 * ray.direction.dot(sphere2ray);\n        var c = sphere2ray.dot(sphere2ray) - 1;\n        var discriminant = b * b - 4 * a * c;\n        if (discriminant < 0)\n            return intersections;\n        var sqrtDiscriminant = Math.sqrt(discriminant);\n        var i1 = intersections.add();\n        i1.t = (-b - sqrtDiscriminant) / (2 * a);\n        i1.object = this;\n        var i2 = intersections.add();\n        i2.t = (-b + sqrtDiscriminant) / (2 * a);\n        i2.object = this;\n        return intersections;\n    }\n    normalAt(p) {\n        var inverseTransform = this.transform.inverse(Sphere.tempMatrix1);\n        var objectNormal = inverseTransform.multiply(p);\n        objectNormal.w = 0;\n        var worldNormal = inverseTransform.transpose(Sphere.tempMatrix2).multiply(objectNormal);\n        worldNormal.w = 0;\n        return worldNormal.normalize();\n    }\n}\nexports.Sphere = Sphere;\nSphere.tempMatrix1 = new matrix_1.Matrix4x4();\nSphere.tempMatrix2 = new matrix_1.Matrix4x4();\n//# sourceMappingURL=sphere.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/sphere.js?");

/***/ }),

/***/ "../raytracer/dist/tuple.js":
/*!**********************************!*\
  !*** ../raytracer/dist/tuple.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tuple = void 0;\nclass Tuple {\n    constructor(x, y, z, w) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n    isPoint() {\n        return this.w == 1;\n    }\n    isVector() {\n        return this.w == 0;\n    }\n    add(tuple) {\n        return new Tuple(this.x + tuple.x, this.y + tuple.y, this.z + tuple.z, this.w + tuple.w);\n    }\n    multiply(scalar) {\n        return new Tuple(this.x * scalar, this.y * scalar, this.z * scalar, this.w * scalar);\n    }\n    divide(scalar) {\n        return new Tuple(this.x / scalar, this.y / scalar, this.z / scalar, this.w / scalar);\n    }\n    substract(tuple) {\n        return new Tuple(this.x - tuple.x, this.y - tuple.y, this.z - tuple.z, this.w - tuple.w);\n    }\n    negate() {\n        return new Tuple(-this.x, -this.y, -this.z, -this.w);\n    }\n    normalize() {\n        return this.divide(this.magnitude());\n    }\n    magnitude() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    }\n    dot(tuple) {\n        return this.x * tuple.x + this.y * tuple.y + this.z * tuple.z + this.w * tuple.w;\n    }\n    cross(tuple) {\n        return Tuple.vector(this.y * tuple.z - this.z * tuple.y, this.z * tuple.x - this.x * tuple.z, this.x * tuple.y - this.y * tuple.x);\n    }\n    reflect(normal) {\n        return this.substract(normal.multiply(2 * this.dot(normal)));\n    }\n    equals(tuple) {\n        return Math.abs(this.x - tuple.x) < Tuple.EPSILON\n            && Math.abs(this.y - tuple.y) < Tuple.EPSILON\n            && Math.abs(this.z - tuple.z) < Tuple.EPSILON;\n    }\n    static point(x, y, z) {\n        return new Tuple(x, y, z, 1);\n    }\n    static vector(x, y, z) {\n        return new Tuple(x, y, z, 0);\n    }\n    clone() {\n        return new Tuple(this.x, this.y, this.z, this.w);\n    }\n}\nexports.Tuple = Tuple;\nTuple.EPSILON = 0.00001;\n//# sourceMappingURL=tuple.js.map\n\n//# sourceURL=webpack://raytracer-gui/../raytracer/dist/tuple.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./dist/index.js");
/******/ 	
/******/ })()
;